global
	daemon
	log stdout format raw daemon
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	# 禁用 TLS 1.2 之前的 TLS
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
	tune.ssl.default-dh-param 2048

defaults
        log global
        mode tcp
        option tcplog

        option dontlognull
        #maxconn 2000
        timeout connect 5s
        timeout client 300s
        timeout server 300s

	http-reuse safe
	

frontend tcp_in
	mode tcp
        bind *:443
        tcp-request inspect-delay 5s
	acl is_tls req.payload(0,3) -m bin 160303
	tcp-request content accept if is_tls
	use_backend tls if is_tls
        default_backend tcp

frontend tls
	mode tcp
	bind abns@/var/run/tls.sock accept-proxy ssl crt /etc/letsencrypt/haproxy.pem tfo
	{{#each protocols}}
	use_backend {{name}} if { ssl_fc_sni -i {{server.address}}  }
	{{/each}}
	default_backend http

frontend tcp
	mode tcp
	bind abns@/var/run/tcp.sock accept-proxy ssl crt /etc/letsencrypt/haproxy.pem tfo
	{{#each protocols}}
	use_backend {{name}} if { ssl_fc_sni -i {{server.address}}  }
	{{/each}}
	default_backend http

backend tcp
	mode tcp
	server tcp abns@/var/run/tcp.sock send-proxy-v2 tfo

backend tls
        mode tcp
	server tls abns@/var/run/tls.sock send-proxy-v2 tfo

{{#each protocols}}
backend {{name}}
	mode tcp
	server {{name}} {{name}}:{{server.port}}
{{/each}}

backend http
	mode tcp
	server nginx nginx:80 send-proxy-v2 tfo